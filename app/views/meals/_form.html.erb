<!-- app/views/meals/_form.html.erb -->
<%= form_with(model: meal) do |form| %>
  <% if meal.errors.any? %>
    <div class="border-2 border-red-600 p-4 mb-6 bg-red-100">
      <h2 class="font-bold uppercase mb-2"><%= pluralize(meal.errors.count, "error") %> prohibited this meal from being saved:</h2>
      <ul class="list-disc list-inside">
        <% meal.errors.each do |error| %>
          <li><%= error.full_message %></li>
        <% end %>
      </ul>
    </div>
  <% end %>

  <div class="space-y-6">
    <div class="grid grid-cols-2 gap-4">
      <div>
        <%= form.label :date, class: "block uppercase font-bold mb-2" %>
        <%= form.date_field :date, class: "w-full border-2 border-black p-2 focus:outline-none focus:border-gray-600" %>
      </div>
      <div>
        <%= form.label :meal_type, class: "block uppercase font-bold mb-2" %>
        <%= form.select :meal_type, options_for_select([['Breakfast', 'breakfast'], ['Lunch', 'lunch'], ['Dinner', 'dinner'], ['Snack', 'snack']], meal.meal_type), 
                        {}, class: "w-full border-2 border-black p-2 focus:outline-none focus:border-gray-600" %>
      </div>
    </div>

    <div>
      <%= form.label :notes, class: "block uppercase font-bold mb-2" %>
      <%= form.text_area :notes, rows: 3, class: "w-full border-2 border-black p-2 focus:outline-none focus:border-gray-600" %>
    </div>

    <div class="border-4 border-black p-6">
      <h3 class="text-xl font-bold uppercase mb-4">Guests</h3>
      
      <div>
        <%= form.label :guest_ids, "SELECT GUESTS", class: "block uppercase font-bold mb-2" %>
        <%= form.select :guest_ids, 
            grouped_options_for_select([
              ["Household Members", @household_members.map { |g| [g.name.upcase, g.id] }],
              ["Other Guests", @available_guests.external_guests.map { |g| [g.name.upcase, g.id] }]
            ], meal.guest_ids),
            {},
            { 
              multiple: true, 
              class: "guests-select w-full",
              data: { placeholder: "Select guests..." }
            } %>
      </div>
    </div>

    <div class="border-4 border-black p-6">
      <h3 class="text-xl font-bold uppercase mb-4">Courses</h3>
      <div id="courses">
        <%= form.fields_for :courses do |course| %>
          <div class="course-fields mb-6 p-4 border-2 border-gray-400">
            <div class="grid grid-cols-12 gap-4 mb-4">
              <div class="col-span-2">
                <%= course.label :order_number, "ORDER", class: "block uppercase font-bold mb-2" %>
                <%= course.number_field :order_number, class: "w-full border-2 border-black p-2" %>
              </div>
              <div class="col-span-10">
                <%= course.label :name, class: "block uppercase font-bold mb-2" %>
                <%= course.text_field :name, class: "w-full border-2 border-black p-2", 
                    placeholder: "e.g., Appetizer, Main Course, Dessert" %>
              </div>
            </div>
            
            <div class="ml-8">
              <p class="uppercase font-bold mb-2">Recipes</p>
              <div id="course_<%= course.index %>_recipes">
                <%= course.fields_for :course_recipes do |cr| %>
                  <div class="recipe-selection mb-3 p-3 border border-gray-400">
                    <div class="grid grid-cols-12 gap-2">
                      <div class="col-span-6">
                        <%= cr.label :recipe_id, "RECIPE", class: "block uppercase text-sm mb-1" %>
                        <%= cr.select :recipe_id, 
                            options_from_collection_for_select(current_user.recipes, :id, :title, cr.object.recipe_id),
                            { include_blank: "Select a recipe" },
                            class: "w-full border border-black p-1 text-sm recipe-select" %>
                      </div>
                      <div class="col-span-6">
                        <%= cr.label :comments, "NOTES", class: "block uppercase text-sm mb-1" %>
                        <%= cr.text_field :comments, class: "w-full border border-black p-1 text-sm" %>
                      </div>
                    </div>
                    <%= cr.check_box :_destroy, class: "mt-2" %>
                    <%= cr.label :_destroy, "Remove", class: "text-sm" %>
                  </div>
                <% end %>
              </div>
              <button type="button" onclick="addRecipeToCourse(<%= course.index %>)" 
                      class="border border-black px-3 py-1 text-sm uppercase hover:bg-black hover:text-white">
                Add Recipe
              </button>
            </div>
            
            <div class="mt-3">
              <%= course.check_box :_destroy %>
              <%= course.label :_destroy, "Remove course", class: "uppercase" %>
            </div>
          </div>
        <% end %>
      </div>
      <button type="button" onclick="addCourse()" class="border-2 border-black px-4 py-2 uppercase hover:bg-black hover:text-white">
        Add Course
      </button>
    </div>

    <div class="flex justify-between">
      <%= form.submit class: "border-4 border-black px-8 py-3 uppercase font-bold hover:bg-black hover:text-white cursor-pointer" %>
      <%= link_to "CANCEL", meals_path, class: "border-4 border-gray-600 px-8 py-3 uppercase font-bold hover:bg-gray-600 hover:text-white" %>
    </div>
  </div>
<% end %>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    // Initialize Choices.js for guests
    const guestsSelect = document.querySelector('.guests-select');
    if (guestsSelect) {
      const guestsChoices = new Choices(guestsSelect, {
        removeItemButton: true,
        searchEnabled: true,
        placeholder: true,
        placeholderValue: 'Select guests...',
        searchPlaceholderValue: 'Type to search guests...',
        itemSelectText: '',
        classNames: {
          containerOuter: 'choices',
          containerInner: 'choices__inner',
          input: 'choices__input',
          inputCloned: 'choices__input--cloned',
          list: 'choices__list',
          listItems: 'choices__list--multiple',
          listSingle: 'choices__list--single',
          listDropdown: 'choices__list--dropdown',
          item: 'choices__item',
          itemSelectable: 'choices__item--selectable',
          itemDisabled: 'choices__item--disabled',
          itemChoice: 'choices__item--choice',
          placeholder: 'choices__placeholder',
          group: 'choices__group',
          groupHeading: 'choices__heading',
          button: 'choices__button',
          activeState: 'is-active',
          focusState: 'is-focused',
          openState: 'is-open',
          disabledState: 'is-disabled',
          highlightedState: 'is-highlighted',
          selectedState: 'is-selected',
          flippedState: 'is-flipped',
          loadingState: 'is-loading',
          noResults: 'has-no-results',
          noChoices: 'has-no-choices'
        }
      });
    }

    // Initialize Choices.js for recipe selects
    const recipeSelects = document.querySelectorAll('.recipe-select');
    recipeSelects.forEach(select => {
      new Choices(select, {
        searchEnabled: true,
        placeholder: true,
        placeholderValue: 'Select a recipe...',
        searchPlaceholderValue: 'Type to search recipes...',
        itemSelectText: ''
      });
    });
  });

  const recipeOptions = `<%= options_from_collection_for_select(current_user.recipes, :id, :title) %>`;
  const guestOptions = `<%= grouped_options_for_select([
    ["Household Members", @household_members.map { |g| [g.name.upcase, g.id] }],
    ["Other Guests", @available_guests.external_guests.map { |g| [g.name.upcase, g.id] }]
  ]) %>`;
  
  function addCourse() {
    const coursesDiv = document.getElementById('courses');
    const newCourseIndex = coursesDiv.children.length;
    const orderNumber = newCourseIndex + 1;
    
    const newCourse = `
      <div class="course-fields mb-6 p-4 border-2 border-gray-400">
        <div class="grid grid-cols-12 gap-4 mb-4">
          <div class="col-span-2">
            <label class="block uppercase font-bold mb-2" for="meal_courses_attributes_${newCourseIndex}_order_number">ORDER</label>
            <input type="number" name="meal[courses_attributes][${newCourseIndex}][order_number]" 
                   value="${orderNumber}" class="w-full border-2 border-black p-2">
          </div>
          <div class="col-span-10">
            <label class="block uppercase font-bold mb-2" for="meal_courses_attributes_${newCourseIndex}_name">Name</label>
            <input type="text" name="meal[courses_attributes][${newCourseIndex}][name]" 
                   class="w-full border-2 border-black p-2" placeholder="e.g., Appetizer, Main Course, Dessert">
          </div>
        </div>
        
        <div class="ml-8">
          <p class="uppercase font-bold mb-2">Recipes</p>
          <div id="course_${newCourseIndex}_recipes"></div>
          <button type="button" onclick="addRecipeToCourse(${newCourseIndex})" 
                  class="border border-black px-3 py-1 text-sm uppercase hover:bg-black hover:text-white">
            Add Recipe
          </button>
        </div>
      </div>
    `;
    
    coursesDiv.insertAdjacentHTML('beforeend', newCourse);
  }
  
  function addRecipeToCourse(courseIndex) {
    const recipesDiv = document.getElementById(`course_${courseIndex}_recipes`);
    const newRecipeIndex = recipesDiv.children.length;
    
    const newRecipe = `
      <div class="recipe-selection mb-3 p-3 border border-gray-400">
        <div class="grid grid-cols-12 gap-2">
          <div class="col-span-6">
            <label class="block uppercase text-sm mb-1">RECIPE</label>
            <select name="meal[courses_attributes][${courseIndex}][course_recipes_attributes][${newRecipeIndex}][recipe_id]"
                    class="w-full border border-black p-1 text-sm recipe-select-new">
              <option value="">Select a recipe</option>
              ${recipeOptions}
            </select>
          </div>
          <div class="col-span-6">
            <label class="block uppercase text-sm mb-1">NOTES</label>
            <input type="text" name="meal[courses_attributes][${courseIndex}][course_recipes_attributes][${newRecipeIndex}][comments]"
                   class="w-full border border-black p-1 text-sm">
          </div>
        </div>
      </div>
    `;
    
    recipesDiv.insertAdjacentHTML('beforeend', newRecipe);
    
    // Initialize Choices.js for the new recipe select
    const newSelect = recipesDiv.querySelector('.recipe-select-new');
    if (newSelect) {
      newSelect.classList.remove('recipe-select-new');
      newSelect.classList.add('recipe-select');
      new Choices(newSelect, {
        searchEnabled: true,
        placeholder: true,
        placeholderValue: 'Select a recipe...',
        searchPlaceholderValue: 'Type to search recipes...',
        itemSelectText: ''
      });
    }
  }
</script>